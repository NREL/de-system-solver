[workspace]
members = [
    "dess",          # pure rust core 
    "dess-examples",      # examples of how to run the code,
    "dess-examples-pyo3", # pyo3 api for dess
]

[workspace.package]
authors = [
    "Chad Baker, Lead Developer",
    "Robin Steuteville, Developer",
    "Nick Reinicke, Developer",
]
license = "BSD-3-Clause"
description = "The Differential Equation System Solver (DESS) is a Rust crate implementing fixed-step and adaptive-step solvers and designed especially for modeling physical systems. Seven explicit ordinary differential equation (ODE) solver methods have been added so far: Euler’s, Heun’s, Midpoint, Ralston’s, Classic Runge-Kutta, Bogacki-Shampine, and Cash-Karp.  These comprise five fixed-step methods and two adaptive-step methods. Few solver packages are implemented in the Rust ecosystem and none are intended specifically for physical system modeling, so the goal of DESS is to create a Rust ODE solver crate designed specifically to easily specify and model physical systems with modular, configurable solver options. In addition to allowing users to directly input equations to solve, DESS allows users to optionally specify and define relationships between nodes in their system, which the package then translates into a system of equations via the Rust macro system, leading to simpler and more intuitive code. See the dess-examples-pyo3 folder for examples how to use DESS in this manner."
edition = "2021"
repository = "https://github.com/NREL/de-system-solver"


[profile.dev]
opt-level = 0

[profile.release]
opt-level = 3

[workspace.dependencies]
anyhow = "1.0.57"
pyo3 = "0.18.1"
pyo3-log = "*"
serde = { version = "1.0.152", features = ["derive"] }
serde_json = "1.0.93"
serde_yaml = "0.9.17"
